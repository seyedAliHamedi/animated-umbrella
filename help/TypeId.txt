Help on class TypeId in module ns3:

class TypeId(cppyy.gbl.CPPInstance)
 |  Method resolution order:
 |      TypeId
 |      cppyy.gbl.CPPInstance
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  AddAttribute(...)
 |      ns3::TypeId ns3::TypeId::AddAttribute(std::string name, std::string help, const ns3::AttributeValue& initialValue, ns3::Ptr<const ns3::AttributeAccessor> accessor, ns3::Ptr<const ns3::AttributeChecker> checker, ns3::TypeId::SupportLevel supportLevel = SUPPORTED, const std::string& supportMsg = "")
 |      ns3::TypeId ns3::TypeId::AddAttribute(std::string name, std::string help, uint32_t flags, const ns3::AttributeValue& initialValue, ns3::Ptr<const ns3::AttributeAccessor> accessor, ns3::Ptr<const ns3::AttributeChecker> checker, ns3::TypeId::SupportLevel supportLevel = SUPPORTED, const std::string& supportMsg = "")
 |
 |  AddConstructor = <cppyy.TemplateProxy object>
 |  AddDeprecatedName(...)
 |      ns3::TypeId ns3::TypeId::AddDeprecatedName(const std::string& name)
 |
 |  AddTraceSource(...)
 |      ns3::TypeId ns3::TypeId::AddTraceSource(std::string name, std::string help, ns3::Ptr<const ns3::TraceSourceAccessor> accessor, std::string callback, ns3::TypeId::SupportLevel supportLevel = SUPPORTED, const std::string& supportMsg = "")
 |
 |  FindAttribute(...)
 |      static std::tuple<bool,ns3::TypeId,ns3::TypeId::AttributeInformation> ns3::TypeId::FindAttribute(const ns3::TypeId& tid, const std::string& name)
 |
 |  GetAttribute(...)
 |      ns3::TypeId::AttributeInformation ns3::TypeId::GetAttribute(std::size_t i)
 |
 |  GetAttributeFullName(...)
 |      std::string ns3::TypeId::GetAttributeFullName(std::size_t i)
 |
 |  GetAttributeN(...)
 |      unsigned long ns3::TypeId::GetAttributeN()
 |
 |  GetConstructor(...)
 |      ns3::Callback<ns3::ObjectBase*> ns3::TypeId::GetConstructor()
 |
 |  GetGroupName(...)
 |      std::string ns3::TypeId::GetGroupName()
 |
 |  GetHash(...)
 |      unsigned int ns3::TypeId::GetHash()
 |
 |  GetName(...)
 |      std::string ns3::TypeId::GetName()
 |
 |  GetParent(...)
 |      ns3::TypeId ns3::TypeId::GetParent()
 |
 |  GetRegistered(...)
 |      static ns3::TypeId ns3::TypeId::GetRegistered(uint16_t i)
 |
 |  GetRegisteredN(...)
 |      static unsigned short ns3::TypeId::GetRegisteredN()
 |
 |  GetSize(...)
 |      unsigned long ns3::TypeId::GetSize()
 |
 |  GetTraceSource(...)
 |      ns3::TypeId::TraceSourceInformation ns3::TypeId::GetTraceSource(std::size_t i)
 |
 |  GetTraceSourceN(...)
 |      unsigned long ns3::TypeId::GetTraceSourceN()
 |
 |  GetUid(...)
 |      unsigned short ns3::TypeId::GetUid()
 |
 |  HasConstructor(...)
 |      bool ns3::TypeId::HasConstructor()
 |
 |  HasParent(...)
 |      bool ns3::TypeId::HasParent()
 |
 |  HideFromDocumentation(...)
 |      ns3::TypeId ns3::TypeId::HideFromDocumentation()
 |
 |  IsChildOf(...)
 |      bool ns3::TypeId::IsChildOf(ns3::TypeId other)
 |
 |  LookupAttributeByName(...)
 |      bool ns3::TypeId::LookupAttributeByName(std::string name, ns3::TypeId::AttributeInformation* info, bool permissive = false)
 |
 |  LookupByHash(...)
 |      static ns3::TypeId ns3::TypeId::LookupByHash(ns3::TypeId::hash_t hash)
 |
 |  LookupByHashFailSafe(...)
 |      static bool ns3::TypeId::LookupByHashFailSafe(ns3::TypeId::hash_t hash, ns3::TypeId* tid)
 |
 |  LookupByName(...)
 |      static ns3::TypeId ns3::TypeId::LookupByName(std::string name)
 |
 |  LookupByNameFailSafe(...)
 |      static bool ns3::TypeId::LookupByNameFailSafe(std::string name, ns3::TypeId* tid)
 |
 |  LookupTraceSourceByName(...)
 |      ns3::Ptr<const ns3::TraceSourceAccessor> ns3::TypeId::LookupTraceSourceByName(std::string name)
 |      ns3::Ptr<const ns3::TraceSourceAccessor> ns3::TypeId::LookupTraceSourceByName(std::string name, ns3::TypeId::TraceSourceInformation* info)
 |
 |  MustHideFromDocumentation(...)
 |      bool ns3::TypeId::MustHideFromDocumentation()
 |
 |  SetAttributeInitialValue(...)
 |      bool ns3::TypeId::SetAttributeInitialValue(std::size_t i, ns3::Ptr<const ns3::AttributeValue> initialValue)
 |
 |  SetGroupName(...)
 |      ns3::TypeId ns3::TypeId::SetGroupName(std::string groupName)
 |
 |  SetParent = <cppyy.TemplateProxy object>
 |      ns3::TypeId ns3::TypeId::SetParent(ns3::TypeId tid)
 |
 |  SetSize(...)
 |      ns3::TypeId ns3::TypeId::SetSize(std::size_t size)
 |
 |  SetUid(...)
 |      void ns3::TypeId::SetUid(uint16_t uid)
 |
 |  __assign__(...)
 |      ns3::TypeId& ns3::TypeId::operator=(const ns3::TypeId& o)
 |
 |  __init__(...)
 |      TypeId::TypeId(const std::string& name)
 |      TypeId::TypeId()
 |      TypeId::TypeId(const ns3::TypeId& o)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables
 |
 |  __weakref__
 |      list of weak references to the object
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  ATTR_CONSTRUCT = (ns3::TypeId::AttributeFlag::ATTR_CONSTRUCT) : (unsig...
 |
 |  ATTR_GET = (ns3::TypeId::AttributeFlag::ATTR_GET) : (unsigned int) 1
 |
 |  ATTR_SET = (ns3::TypeId::AttributeFlag::ATTR_SET) : (unsigned int) 2
 |
 |  ATTR_SGC = (ns3::TypeId::AttributeFlag::ATTR_SGC) : (unsigned int) 7
 |
 |  DEPRECATED = (ns3::TypeId::SupportLevel::DEPRECATED) : (unsigned int) ...
 |
 |  OBSOLETE = (ns3::TypeId::SupportLevel::OBSOLETE) : (unsigned int) 2
 |
 |  SUPPORTED = (ns3::TypeId::SupportLevel::SUPPORTED) : (unsigned int) 0
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __add__(self, value, /)
 |      Return self+value.
 |
 |  __bool__(self, /)
 |      True if self else False
 |
 |  __destruct__(...)
 |      call the C++ destructor
 |
 |  __dispatch__(...)
 |      dispatch to selected overload
 |
 |  __eq__(self, value, /)
 |      Return self==value.
 |
 |  __ge__(self, value, /)
 |      Return self>=value.
 |
 |  __getitem__(...)
 |      pointer dereferencing
 |
 |  __gt__(self, value, /)
 |      Return self>value.
 |
 |  __hash__(self, /)
 |      Return hash(self).
 |
 |  __invert__(self, /)
 |      ~self
 |
 |  __le__(self, value, /)
 |      Return self<=value.
 |
 |  __lt__(self, value, /)
 |      Return self<value.
 |
 |  __mul__(self, value, /)
 |      Return self*value.
 |
 |  __ne__(self, value, /)
 |      Return self!=value.
 |
 |  __neg__(self, /)
 |      -self
 |
 |  __pos__(self, /)
 |      +self
 |
 |  __radd__(self, value, /)
 |      Return value+self.
 |
 |  __repr__(self, /)
 |      Return repr(self).
 |
 |  __reshape__(...)
 |      cast pointer to 1D array type
 |
 |  __rmul__(self, value, /)
 |      Return value*self.
 |
 |  __rsub__(self, value, /)
 |      Return value-self.
 |
 |  __rtruediv__(self, value, /)
 |      Return value/self.
 |
 |  __smartptr__(...)
 |      get associated smart pointer, if any
 |
 |  __str__(self, /)
 |      Return str(self).
 |
 |  __sub__(self, value, /)
 |      Return self-value.
 |
 |  __truediv__(self, value, /)
 |      Return self/value.
 |
 |  ----------------------------------------------------------------------
 |  Static methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __new__(*args, **kwargs) class method of cppyy.gbl.CPPInstance
 |      Create and return a new object.  See help(type) for accurate signature.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from cppyy.gbl.CPPInstance:
 |
 |  __python_owns__
 |      If true, python manages the life time of this object

