Help on class Simulator in module ns3:

class Simulator(cppyy.gbl.CPPInstance)
 |  Method resolution order:
 |      Simulator
 |      cppyy.gbl.CPPInstance
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  Cancel(...)
 |      static void ns3::Simulator::Cancel(const ns3::EventId& id)
 |
 |  Destroy(...)
 |      static void ns3::Simulator::Destroy()
 |
 |  GetContext(...)
 |      static unsigned int ns3::Simulator::GetContext()
 |
 |  GetDelayLeft(...)
 |      static ns3::Time ns3::Simulator::GetDelayLeft(const ns3::EventId& id)
 |
 |  GetEventCount(...)
 |      static unsigned long long ns3::Simulator::GetEventCount()
 |
 |  GetImplementation(...)
 |      static ns3::Ptr<ns3::SimulatorImpl> ns3::Simulator::GetImplementation()
 |
 |  GetMaximumSimulationTime(...)
 |      static ns3::Time ns3::Simulator::GetMaximumSimulationTime()
 |
 |  GetStopEvent(...)
 |      static ns3::EventId ns3::Simulator::GetStopEvent()
 |
 |  GetSystemId(...)
 |      static unsigned int ns3::Simulator::GetSystemId()
 |
 |  IsExpired(...)
 |      static bool ns3::Simulator::IsExpired(const ns3::EventId& id)
 |
 |  IsFinished(...)
 |      static bool ns3::Simulator::IsFinished()
 |
 |  Now(...)
 |      static ns3::Time ns3::Simulator::Now()
 |
 |  Remove(...)
 |      static void ns3::Simulator::Remove(const ns3::EventId& id)
 |
 |  Run(...)
 |      static void ns3::Simulator::Run()
 |
 |  Schedule = <cppyy.TemplateProxy object>
 |      static ns3::EventId ns3::Simulator::Schedule(const ns3::Time& delay, const ns3::Ptr<ns3::EventImpl>& event)
 |
 |  ScheduleDestroy = <cppyy.TemplateProxy object>
 |      static ns3::EventId ns3::Simulator::ScheduleDestroy(const ns3::Ptr<ns3::EventImpl>& event)
 |
 |  ScheduleNow = <cppyy.TemplateProxy object>
 |      static ns3::EventId ns3::Simulator::ScheduleNow(const ns3::Ptr<ns3::EventImpl>& event)
 |
 |  ScheduleWithContext = <cppyy.TemplateProxy object>
 |      static void ns3::Simulator::ScheduleWithContext(uint32_t context, const ns3::Time& delay, ns3::EventImpl* event)
 |
 |  SetImplementation(...)
 |      static void ns3::Simulator::SetImplementation(ns3::Ptr<ns3::SimulatorImpl> impl)
 |
 |  SetScheduler(...)
 |      static void ns3::Simulator::SetScheduler(ns3::ObjectFactory schedulerFactory)
 |
 |  Stop(...)
 |      static void ns3::Simulator::Stop()
 |      static ns3::EventId ns3::Simulator::Stop(const ns3::Time& delay)
 |
 |  __assign__(...)
 |      ns3::Simulator& ns3::Simulator::operator=(const ns3::Simulator&)
 |
 |  __init__(...)
 |      Simulator::Simulator(const ns3::Simulator&)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables
 |
 |  __weakref__
 |      list of weak references to the object
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  NO_CONTEXT = -1
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __add__(self, value, /)
 |      Return self+value.
 |
 |  __bool__(self, /)
 |      True if self else False
 |
 |  __destruct__(...)
 |      call the C++ destructor
 |
 |  __dispatch__(...)
 |      dispatch to selected overload
 |
 |  __eq__(self, value, /)
 |      Return self==value.
 |
 |  __ge__(self, value, /)
 |      Return self>=value.
 |
 |  __getitem__(...)
 |      pointer dereferencing
 |
 |  __gt__(self, value, /)
 |      Return self>value.
 |
 |  __hash__(self, /)
 |      Return hash(self).
 |
 |  __invert__(self, /)
 |      ~self
 |
 |  __le__(self, value, /)
 |      Return self<=value.
 |
 |  __lt__(self, value, /)
 |      Return self<value.
 |
 |  __mul__(self, value, /)
 |      Return self*value.
 |
 |  __ne__(self, value, /)
 |      Return self!=value.
 |
 |  __neg__(self, /)
 |      -self
 |
 |  __pos__(self, /)
 |      +self
 |
 |  __radd__(self, value, /)
 |      Return value+self.
 |
 |  __repr__(self, /)
 |      Return repr(self).
 |
 |  __reshape__(...)
 |      cast pointer to 1D array type
 |
 |  __rmul__(self, value, /)
 |      Return value*self.
 |
 |  __rsub__(self, value, /)
 |      Return value-self.
 |
 |  __rtruediv__(self, value, /)
 |      Return value/self.
 |
 |  __smartptr__(...)
 |      get associated smart pointer, if any
 |
 |  __str__(self, /)
 |      Return str(self).
 |
 |  __sub__(self, value, /)
 |      Return self-value.
 |
 |  __truediv__(self, value, /)
 |      Return self/value.
 |
 |  ----------------------------------------------------------------------
 |  Static methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __new__(*args, **kwargs) class method of cppyy.gbl.CPPInstance
 |      Create and return a new object.  See help(type) for accurate signature.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from cppyy.gbl.CPPInstance:
 |
 |  __python_owns__
 |      If true, python manages the life time of this object

