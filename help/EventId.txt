Help on class EventId in module ns3:

class EventId(cppyy.gbl.CPPInstance)
 |  Method resolution order:
 |      EventId
 |      cppyy.gbl.CPPInstance
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  Cancel(...)
 |      void ns3::EventId::Cancel()
 |
 |  GetContext(...)
 |      unsigned int ns3::EventId::GetContext()
 |
 |  GetTs(...)
 |      unsigned long long ns3::EventId::GetTs()
 |
 |  GetUid(...)
 |      unsigned int ns3::EventId::GetUid()
 |
 |  IsExpired(...)
 |      bool ns3::EventId::IsExpired()
 |
 |  IsPending(...)
 |      bool ns3::EventId::IsPending()
 |
 |  IsRunning(...)
 |      bool ns3::EventId::IsRunning()
 |
 |  PeekEventImpl(...)
 |      ns3::EventImpl* ns3::EventId::PeekEventImpl()
 |
 |  Remove(...)
 |      void ns3::EventId::Remove()
 |
 |  __assign__(...)
 |      ns3::EventId& ns3::EventId::operator=(const ns3::EventId&)
 |      ns3::EventId& ns3::EventId::operator=(ns3::EventId&&)
 |
 |  __init__(...)
 |      EventId::EventId()
 |      EventId::EventId(const ns3::Ptr<ns3::EventImpl>& impl, uint64_t ts, uint32_t context, uint32_t uid)
 |      EventId::EventId(const ns3::EventId&)
 |      EventId::EventId(ns3::EventId&&)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables
 |
 |  __weakref__
 |      list of weak references to the object
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  DESTROY = (ns3::EventId::UID::DESTROY) : (unsigned int) 2
 |
 |  INVALID = (ns3::EventId::UID::INVALID) : (unsigned int) 0
 |
 |  NOW = (ns3::EventId::UID::NOW) : (unsigned int) 1
 |
 |  RESERVED = (ns3::EventId::UID::RESERVED) : (unsigned int) 3
 |
 |  VALID = (ns3::EventId::UID::VALID) : (unsigned int) 4
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __add__(self, value, /)
 |      Return self+value.
 |
 |  __bool__(self, /)
 |      True if self else False
 |
 |  __destruct__(...)
 |      call the C++ destructor
 |
 |  __dispatch__(...)
 |      dispatch to selected overload
 |
 |  __eq__(self, value, /)
 |      Return self==value.
 |
 |  __ge__(self, value, /)
 |      Return self>=value.
 |
 |  __getitem__(...)
 |      pointer dereferencing
 |
 |  __gt__(self, value, /)
 |      Return self>value.
 |
 |  __hash__(self, /)
 |      Return hash(self).
 |
 |  __invert__(self, /)
 |      ~self
 |
 |  __le__(self, value, /)
 |      Return self<=value.
 |
 |  __lt__(self, value, /)
 |      Return self<value.
 |
 |  __mul__(self, value, /)
 |      Return self*value.
 |
 |  __ne__(self, value, /)
 |      Return self!=value.
 |
 |  __neg__(self, /)
 |      -self
 |
 |  __pos__(self, /)
 |      +self
 |
 |  __radd__(self, value, /)
 |      Return value+self.
 |
 |  __repr__(self, /)
 |      Return repr(self).
 |
 |  __reshape__(...)
 |      cast pointer to 1D array type
 |
 |  __rmul__(self, value, /)
 |      Return value*self.
 |
 |  __rsub__(self, value, /)
 |      Return value-self.
 |
 |  __rtruediv__(self, value, /)
 |      Return value/self.
 |
 |  __smartptr__(...)
 |      get associated smart pointer, if any
 |
 |  __str__(self, /)
 |      Return str(self).
 |
 |  __sub__(self, value, /)
 |      Return self-value.
 |
 |  __truediv__(self, value, /)
 |      Return self/value.
 |
 |  ----------------------------------------------------------------------
 |  Static methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __new__(*args, **kwargs) class method of cppyy.gbl.CPPInstance
 |      Create and return a new object.  See help(type) for accurate signature.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from cppyy.gbl.CPPInstance:
 |
 |  __python_owns__
 |      If true, python manages the life time of this object

