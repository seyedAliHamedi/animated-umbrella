Help on class LogComponent in module ns3:

class LogComponent(cppyy.gbl.CPPInstance)
 |  Method resolution order:
 |      LogComponent
 |      cppyy.gbl.CPPInstance
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  Disable(...)
 |      void ns3::LogComponent::Disable(const ns3::LogLevel level)
 |
 |  Enable(...)
 |      void ns3::LogComponent::Enable(const ns3::LogLevel level)
 |
 |  File(...)
 |      std::string ns3::LogComponent::File()
 |
 |  GetComponentList(...)
 |      static std::unordered_map<std::string,ns3::LogComponent*>* ns3::LogComponent::GetComponentList()
 |
 |  GetLevelLabel(...)
 |      static std::string ns3::LogComponent::GetLevelLabel(const ns3::LogLevel level)
 |
 |  IsEnabled(...)
 |      bool ns3::LogComponent::IsEnabled(const ns3::LogLevel level)
 |
 |  IsNoneEnabled(...)
 |      bool ns3::LogComponent::IsNoneEnabled()
 |
 |  Name(...)
 |      std::string ns3::LogComponent::Name()
 |
 |  SetMask(...)
 |      void ns3::LogComponent::SetMask(const ns3::LogLevel level)
 |
 |  __assign__(...)
 |      ns3::LogComponent& ns3::LogComponent::operator=(const ns3::LogComponent&)
 |      ns3::LogComponent& ns3::LogComponent::operator=(ns3::LogComponent&&)
 |
 |  __init__(...)
 |      LogComponent::LogComponent(const std::string& name, const std::string& file, const ns3::LogLevel mask = LOG_NONE)
 |      LogComponent::LogComponent(const ns3::LogComponent&)
 |      LogComponent::LogComponent(ns3::LogComponent&&)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables
 |
 |  __weakref__
 |      list of weak references to the object
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __add__(self, value, /)
 |      Return self+value.
 |
 |  __bool__(self, /)
 |      True if self else False
 |
 |  __destruct__(...)
 |      call the C++ destructor
 |
 |  __dispatch__(...)
 |      dispatch to selected overload
 |
 |  __eq__(self, value, /)
 |      Return self==value.
 |
 |  __ge__(self, value, /)
 |      Return self>=value.
 |
 |  __getitem__(...)
 |      pointer dereferencing
 |
 |  __gt__(self, value, /)
 |      Return self>value.
 |
 |  __hash__(self, /)
 |      Return hash(self).
 |
 |  __invert__(self, /)
 |      ~self
 |
 |  __le__(self, value, /)
 |      Return self<=value.
 |
 |  __lt__(self, value, /)
 |      Return self<value.
 |
 |  __mul__(self, value, /)
 |      Return self*value.
 |
 |  __ne__(self, value, /)
 |      Return self!=value.
 |
 |  __neg__(self, /)
 |      -self
 |
 |  __pos__(self, /)
 |      +self
 |
 |  __radd__(self, value, /)
 |      Return value+self.
 |
 |  __repr__(self, /)
 |      Return repr(self).
 |
 |  __reshape__(...)
 |      cast pointer to 1D array type
 |
 |  __rmul__(self, value, /)
 |      Return value*self.
 |
 |  __rsub__(self, value, /)
 |      Return value-self.
 |
 |  __rtruediv__(self, value, /)
 |      Return value/self.
 |
 |  __smartptr__(...)
 |      get associated smart pointer, if any
 |
 |  __str__(self, /)
 |      Return str(self).
 |
 |  __sub__(self, value, /)
 |      Return self-value.
 |
 |  __truediv__(self, value, /)
 |      Return self/value.
 |
 |  ----------------------------------------------------------------------
 |  Static methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __new__(*args, **kwargs) class method of cppyy.gbl.CPPInstance
 |      Create and return a new object.  See help(type) for accurate signature.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from cppyy.gbl.CPPInstance:
 |
 |  __python_owns__
 |      If true, python manages the life time of this object

