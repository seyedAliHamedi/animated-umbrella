Help on class Time in module ns3:

class Time(cppyy.gbl.CPPInstance)
 |  Method resolution order:
 |      Time
 |      cppyy.gbl.CPPInstance
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  As(...)
 |      ns3::TimeWithUnit ns3::Time::As(const ns3::Time::Unit unit = Time::AUTO)
 |
 |  Compare(...)
 |      int ns3::Time::Compare(const ns3::Time& o)
 |
 |  From(...)
 |      static ns3::Time ns3::Time::From(const ns3::int64x64_t& value)
 |      static ns3::Time ns3::Time::From(const ns3::int64x64_t& value, ns3::Time::Unit unit)
 |
 |  FromDouble(...)
 |      static ns3::Time ns3::Time::FromDouble(double value, ns3::Time::Unit unit)
 |
 |  FromInteger(...)
 |      static ns3::Time ns3::Time::FromInteger(uint64_t value, ns3::Time::Unit unit)
 |
 |  GetDays(...)
 |      double ns3::Time::GetDays()
 |
 |  GetDouble(...)
 |      double ns3::Time::GetDouble()
 |
 |  GetFemtoSeconds(...)
 |      long long ns3::Time::GetFemtoSeconds()
 |
 |  GetHours(...)
 |      double ns3::Time::GetHours()
 |
 |  GetInteger(...)
 |      long long ns3::Time::GetInteger()
 |
 |  GetMicroSeconds(...)
 |      long long ns3::Time::GetMicroSeconds()
 |
 |  GetMilliSeconds(...)
 |      long long ns3::Time::GetMilliSeconds()
 |
 |  GetMinutes(...)
 |      double ns3::Time::GetMinutes()
 |
 |  GetNanoSeconds(...)
 |      long long ns3::Time::GetNanoSeconds()
 |
 |  GetPicoSeconds(...)
 |      long long ns3::Time::GetPicoSeconds()
 |
 |  GetResolution(...)
 |      static ns3::Time::Unit ns3::Time::GetResolution()
 |
 |  GetSeconds(...)
 |      double ns3::Time::GetSeconds()
 |
 |  GetTimeStep(...)
 |      long long ns3::Time::GetTimeStep()
 |
 |  GetYears(...)
 |      double ns3::Time::GetYears()
 |
 |  IsNegative(...)
 |      bool ns3::Time::IsNegative()
 |
 |  IsPositive(...)
 |      bool ns3::Time::IsPositive()
 |
 |  IsStrictlyNegative(...)
 |      bool ns3::Time::IsStrictlyNegative()
 |
 |  IsStrictlyPositive(...)
 |      bool ns3::Time::IsStrictlyPositive()
 |
 |  IsZero(...)
 |      bool ns3::Time::IsZero()
 |
 |  Max(...)
 |      static ns3::Time ns3::Time::Max()
 |
 |  Min(...)
 |      static ns3::Time ns3::Time::Min()
 |
 |  RoundTo(...)
 |      ns3::Time ns3::Time::RoundTo(ns3::Time::Unit unit)
 |
 |  SetResolution(...)
 |      static void ns3::Time::SetResolution(ns3::Time::Unit resolution)
 |
 |  StaticInit(...)
 |      static bool ns3::Time::StaticInit()
 |
 |  To(...)
 |      ns3::int64x64_t ns3::Time::To(ns3::Time::Unit unit)
 |
 |  ToDouble(...)
 |      double ns3::Time::ToDouble(ns3::Time::Unit unit)
 |
 |  ToInteger(...)
 |      long long ns3::Time::ToInteger(ns3::Time::Unit unit)
 |
 |  __assign__(...)
 |      ns3::Time& ns3::Time::operator=(const ns3::Time& o)
 |
 |  __eq__ = Time_eq(...)
 |      bool ::Time_eq(ns3::Time& a, ns3::Time& b)
 |
 |  __ge__ = Time_ge(...)
 |      bool ::Time_ge(ns3::Time& a, ns3::Time& b)
 |
 |  __gt__ = Time_gt(...)
 |      bool ::Time_gt(ns3::Time& a, ns3::Time& b)
 |
 |  __init__(...)
 |      Time::Time()
 |      Time::Time(const ns3::Time& o)
 |      Time::Time(ns3::Time&& o)
 |      Time::Time(double v)
 |      Time::Time(int v)
 |      Time::Time(long v)
 |      Time::Time(long long v)
 |      Time::Time(unsigned int v)
 |      Time::Time(unsigned long v)
 |      Time::Time(unsigned long long v)
 |      Time::Time(const ns3::int64x64_t& v)
 |      Time::Time(const std::string& s)
 |
 |  __le__ = Time_le(...)
 |      bool ::Time_le(ns3::Time& a, ns3::Time& b)
 |
 |  __lt__ = Time_lt(...)
 |      bool ::Time_lt(ns3::Time& a, ns3::Time& b)
 |
 |  __ne__ = Time_ne(...)
 |      bool ::Time_ne(ns3::Time& a, ns3::Time& b)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables
 |
 |  __weakref__
 |      list of weak references to the object
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  AUTO = (ns3::Time::Unit::AUTO) : (unsigned int) 11
 |
 |  D = (ns3::Time::Unit::D) : (unsigned int) 1
 |
 |  FS = (ns3::Time::Unit::FS) : (unsigned int) 9
 |
 |  H = (ns3::Time::Unit::H) : (unsigned int) 2
 |
 |  LAST = (ns3::Time::Unit::LAST) : (unsigned int) 10
 |
 |  MIN = (ns3::Time::Unit::MIN) : (unsigned int) 3
 |
 |  MS = (ns3::Time::Unit::MS) : (unsigned int) 5
 |
 |  NS = (ns3::Time::Unit::NS) : (unsigned int) 7
 |
 |  PS = (ns3::Time::Unit::PS) : (unsigned int) 8
 |
 |  S = (ns3::Time::Unit::S) : (unsigned int) 4
 |
 |  US = (ns3::Time::Unit::US) : (unsigned int) 6
 |
 |  Y = (ns3::Time::Unit::Y) : (unsigned int) 0
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __add__(self, value, /)
 |      Return self+value.
 |
 |  __bool__(self, /)
 |      True if self else False
 |
 |  __destruct__(...)
 |      call the C++ destructor
 |
 |  __dispatch__(...)
 |      dispatch to selected overload
 |
 |  __getitem__(...)
 |      pointer dereferencing
 |
 |  __hash__(self, /)
 |      Return hash(self).
 |
 |  __invert__(self, /)
 |      ~self
 |
 |  __mul__(self, value, /)
 |      Return self*value.
 |
 |  __neg__(self, /)
 |      -self
 |
 |  __pos__(self, /)
 |      +self
 |
 |  __radd__(self, value, /)
 |      Return value+self.
 |
 |  __repr__(self, /)
 |      Return repr(self).
 |
 |  __reshape__(...)
 |      cast pointer to 1D array type
 |
 |  __rmul__(self, value, /)
 |      Return value*self.
 |
 |  __rsub__(self, value, /)
 |      Return value-self.
 |
 |  __rtruediv__(self, value, /)
 |      Return value/self.
 |
 |  __smartptr__(...)
 |      get associated smart pointer, if any
 |
 |  __str__(self, /)
 |      Return str(self).
 |
 |  __sub__(self, value, /)
 |      Return self-value.
 |
 |  __truediv__(self, value, /)
 |      Return self/value.
 |
 |  ----------------------------------------------------------------------
 |  Static methods inherited from cppyy.gbl.CPPInstance:
 |
 |  __new__(*args, **kwargs) class method of cppyy.gbl.CPPInstance
 |      Create and return a new object.  See help(type) for accurate signature.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from cppyy.gbl.CPPInstance:
 |
 |  __python_owns__
 |      If true, python manages the life time of this object

